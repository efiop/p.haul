#!/bin/env python

import signal
import xem_rpc
import p_haul_service as ph_srv
import argparse

if __name__ == "__main__":
	parser = argparse.ArgumentParser("Process HAULer service server")
	parser.add_argument("-p", "--port", help = "port to bind on", default = xem_rpc.rpc_port, type = int)
	parser.add_argument("--no-ssh", help = "Don't expect ssh tunneling(VERY UNSAFE). WARNING: DO NOT USE THIS OPTION!", default = False, action = "store_true")

	args = vars(parser.parse_args())

	if args.pop("no_ssh"):
		print "WARNING: external non-ssh connection will be accepted."
		host = ("0.0.0.0", args.pop("port"))
	else:
		host = ("127.0.0.1", args.pop("port"))

	sfd = None
	def fin(foo, bar):
		print "Stop by %d" % foo
		sfd.close()

	print "Starting p.haul rpyc service"
	t = xem_rpc.rpc_threaded_srv(ph_srv.phaul_service, host)

	# FIXME: Setup stop handlers
	sfd = t.get_stop_fd()
	signal.signal(signal.SIGTERM, fin)
	signal.signal(signal.SIGINT, fin)

	t.start()
	signal.pause()
	t.join()
	print "Bye!"
